{"version":3,"sources":["p2-homeworks/h1/Message.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","s","massage","avatar","alt","src","angle","text","name","message","text1","time","HW1","messageData","SuperButton","red","restProps","finalClassName","default","Affair","affair","priority","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filter","filteredAffairs","filterAffairs","deleteAffair","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","placeholder","finalSpanClassName","finalInputClassName","errorInput","superInput","e","currentTarget","value","key","Greeting","setNameCallback","addUser","totalUsers","greeting","GreetingContainer","users","addUserCallback","setName","setError","length","alert","HW3","setUsers","user","v1","SuperCheckbox","onChangeChecked","children","checkbox","chackedValue","checked","HW4","setText","showAlert","setChecked","column","blue","disabled","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.46dcb4f5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"massage\":\"Message_massage__2NNTQ\",\"text1\":\"Message_text1__3P3uK\",\"avatar\":\"Message_avatar__1HCv-\",\"text\":\"Message_text__Ng3Fp\",\"angle\":\"Message_angle__3IvQE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__3Er5P\",\"errorInput\":\"SuperInputText_errorInput__RxxTL\",\"error\":\"SuperInputText_error__3Y04V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"red\":\"SuperButton_red__2z5_h\",\"default\":\"SuperButton_default__2gq-T\",\"pulsate\":\"SuperButton_pulsate__30eyB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__3zkzz\",\"column\":\"HW4_column__386_V\",\"testSpanError\":\"HW4_testSpanError__21Ep_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__3ILZm\",\"spanClassName\":\"SuperCheckbox_spanClassName__17ATg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3YN-p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"greeting\":\"Greeting_greeting__3dKW2\",\"someClass\":\"Greeting_someClass__3Mm0s\",\"error\":\"Greeting_error__3WJln\"};","import React from 'react'\nimport s from './Message.module.css'\n\n\ntype PropsType = {\n    avatar:string\n    name:string\n    message:string\n    time:string\n}\n\nfunction Message(props:PropsType) {\n\n    return (\n        <div>\n\n            <div className={s.massage}>\n\n                <img className={s.avatar} alt={'avatar'} src={props.avatar}/>\n\n                <div className={s.angle}/>\n\n                <div className={s.text}>\n                    <p>{props.name} {s.name}</p>\n                    <p>{props.message} {s.text1}</p>\n                    <p>{props.time}</p>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default Message\n","import React from 'react'\nimport Message from \"./Message\";\n\n\nfunction HW1() {\n    const messageData = {\n        avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n        name: 'Some Name',\n        message: 'some text',\n        time: '22:00',\n    }\n    return (\n        <div>\n            <hr/>\n            homeworks 1\n\n            <Message\n                avatar={messageData.avatar}\n                name={messageData.name}\n                message={messageData.message}\n                time={messageData.time}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeMessage/>*/}\n            <hr/>\n        </div>\n    )\n}\nexport default HW1\n\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React from 'react'\nimport {AffairType, deleteAffair} from \"./HW2\";\nimport {FilterType} from \"./HW2\";\nimport Affairs from \"./Affairs\";\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\n\ntype AffairPropsType = {\n    // key не нужно типизировать\n    affair: AffairType // need to fix any\n    deleteAffairCallback: (_id: number) => void\n}\n\nfunction Affair(props: AffairPropsType) {\n    const deleteCallback = () => {\n        props.deleteAffairCallback(props.affair._id)\n    }// need to fix\n\n    return (\n        <div>\n            {props.affair.name} ----\n            {props.affair.priority}\n            <SuperButton onClick={deleteCallback}>X</SuperButton>\n        </div>\n    )\n}\n\nexport default Affair\n","import React from 'react'\nimport Affair from './Affair'\nimport {AffairType, filterAffairs, FilterType} from './HW2'\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\n\ntype AffairsPropsType = { // need to fix any\n    data: AffairType[]\n    setFilter: (value: FilterType) => void\n    deleteAffairCallback: (_id: number) => void\n}\n\nfunction Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair // should work\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    const setAll = () => {\n        props.setFilter('all')\n    } // need to fix\n    const setHigh = () => {\n        props.setFilter('high')\n    }\n    const setMiddle = () => {\n        props.setFilter('middle')\n    }\n    const setLow = () => {\n        props.setFilter('low')\n    }\n\n    return (\n        <div>\n\n            {mappedAffairs}\n            <SuperButton onClick={setAll}>All</SuperButton>\n            <SuperButton onClick={setHigh}>High</SuperButton>\n            <SuperButton onClick={setMiddle}>Middle</SuperButton>\n            <SuperButton onClick={setLow}>Low</SuperButton>\n        </div>\n    )\n}\n\nexport default Affairs\n","import React, {useState} from 'react'\nimport Affairs from './Affairs'\n\n// types\nexport type AffairPriorityType = 'high' |'middle' | 'low'// need to fix any\nexport type AffairType = {\n    _id: number\n    name:string\n    priority:string\n} // need to fix any\nexport type FilterType = 'all' | AffairPriorityType\n\n// constants\nconst defaultAffairs: AffairType[] = [ // need to fix any\n    {_id: 1, name: 'React', priority: 'high'},\n    {_id: 2, name: 'anime', priority: 'low'},\n    {_id: 3, name: 'games', priority: 'low'},\n    {_id: 4, name: 'work', priority: 'high'},\n    {_id: 5, name: 'html & css', priority: 'middle'},\n]\n\n// pure helper functions\nexport const filterAffairs = (affairs: AffairType[], filter: FilterType): AffairType[] => { // need to fix any\n    if (filter === 'all') return affairs\n    else if (filter === 'high') return affairs.filter(a => a.priority === 'high')\n    else if (filter === 'middle') return affairs.filter(a => a.priority === 'middle')\n    else if (filter === 'low') return affairs.filter(a => a.priority === 'low')\n    else return affairs\n}\nexport const deleteAffair = (affairs: AffairType[], _id: number): AffairType[] => { // need to fix any\n    return affairs.filter(a=> a._id != _id)// need to fix\n}\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<AffairType[]>(defaultAffairs) // need to fix any\n    const [filter, setFilter] = useState<FilterType>('all')\n\n    const filteredAffairs = filterAffairs(affairs, filter)\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\n\n    return (\n        <div>\n            <hr/>\n            homeworks 2\n\n            {/*should work (должно работать)*/}\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW2\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,placeholder,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName = `${error? s.errorInput:s.superInput} ${className}` // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}></span>}\n        </>\n    )\n}\n\nexport default SuperInputText\n","import React from 'react'\nimport s from './Greeting.module.css'\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\nimport SuperInputText from '../h4/common/c1-SuperInputText/SuperInputText'\nimport sb from '../h4/common/c1-SuperInputText/SuperInputText.module.css'\n\ntype GreetingPropsType = {\n    name: string // need to fix any\n    setNameCallback: (e: any) => void // need to fix any\n    addUser: () => void // need to fix any\n    error: string // need to fix any\n    totalUsers: number // need to fix any\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\n) => {\n    return (\n        <div className={s.greeting}>\n            <div>\n                <SuperInputText value={name} onChange={setNameCallback} error={error}></SuperInputText>\n                <span>{error}</span>\n                <SuperButton onClick={addUser}>Add</SuperButton>\n                <span>{totalUsers}</span>\n            </div>\n        </div>\n    )\n}\n\nexport default Greeting\n","import React, {ChangeEvent, useState} from 'react'\nimport Greeting from './Greeting'\nimport {UserType} from \"./HW3\";\n\ntype GreetingContainerPropsType = {\n    users: Array<UserType> // need to fix any\n    addUserCallback: (name:string)=>void // need to fix any\n}\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\n    const [name, setName] = useState<string>('') // need to fix any\n    const [error, setError] = useState<string>('') // need to fix any\n\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => { // need to fix any\n        setName(e.currentTarget.value)\n        setError('')\n    }\n\n    const addUser = () => {\n        if (name===''){ setError('Здесь должна быть хотя бы одна буква')}\n        else {alert(`Hello ${name} !`)}\n        addUserCallback(name)\n         // need to fix\n    }\n    let totalUsers = users.length\n    // need to fix\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            error={error}\n            totalUsers={totalUsers}\n        />\n    )\n}\n\nexport default GreetingContainer\n","import React, {useState} from 'react'\nimport GreetingContainer from './GreetingContainer'\nimport {v1} from 'uuid'\n// types\nexport type UserType = {\n    _id: string// need to fix any\n    name: string // need to fix any\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<UserType[]>([]) // need to fix any\n\n    const addUserCallback = (name: string) => {\n        const user={\n            _id:v1(),\n            name,\n        }// need to fix any\n        setUsers([...users,user]) // need to fix\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 3\n\n            {/*should work (должно работать)*/}\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW3\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        const chackedValue = e.currentTarget.checked\n\n        onChangeChecked && onChangeChecked(chackedValue)\n        onChange && onChange(e)\n        // сделайте так чтоб работал onChange и onChangeChecked\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React, {ChangeEvent, useState} from 'react'\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\nimport s from './HW4.module.css'\nimport SuperButton from './common/c2-SuperButton/SuperButton'\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\n\nfunction HW4() {\n    const [text, setText] = useState<string>('')\n    const error = text ? '' : 'error'\n\n    const showAlert = () => {\n        if (error) {\n            alert('введите текст...')\n        } else {\n            alert(text) // если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false)\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\n\n    return (\n        <div>\n            <hr/>\n            homeworks 4\n\n            <div className={s.column}>\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    // spanClassName={s.testSpanError}\n                />\n\n                <SuperInputText\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\n                />\n\n                {/*----------------------------------------------------*/}\n\n                <SuperButton>\n                    default\n                </SuperButton>\n\n                <SuperButton\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                <SuperButton disabled>\n                    disabled\n                </SuperButton>\n\n                {/*----------------------------------------------------*/}\n\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW4\n","import React from 'react'\nimport s from './App.module.css'\nimport HW1 from '../../../p2-homeworks/h1/HW1'\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\nfunction App() {\n    return (\n        <div className={s.App}>\n            <div>react homeworks:</div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            {/*<HW5/>*/}\n\n        </div>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './p1-main/m1-ui/u1-app/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}